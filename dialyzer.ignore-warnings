:0: Unknown function 'Elixir.Aewallet.KeyPair':compress/1
:0: Unknown function 'Elixir.Aewallet.KeyPair':derive/2
:0: Unknown function 'Elixir.Aewallet.KeyPair':generate_master_key/1
:0: Unknown function 'Elixir.Aewallet.KeyPair':generate_pub_key/1
:0: Unknown function 'Elixir.Aewallet.Signing':sign/2
:0: Unknown function 'Elixir.Aewallet.Signing':verify/3
:0: Unknown function 'Elixir.Aewallet.Wallet':create_wallet/2
:0: Unknown function 'Elixir.Aewallet.Wallet':get_private_key/3
:0: Unknown function 'Elixir.Aewallet.Wallet':get_public_key/3
:0: Unknown function 'Elixir.Aewallet.Wallet':get_seed/2
:0: Unknown function 'Elixir.ExJsonSchema.Schema':resolve/1
:0: Unknown function 'Elixir.ExJsonSchema.Validator':validate/2
:0: Unknown function 'Elixir.ExRLP':decode/1
:0: Unknown function 'Elixir.ExRLP':encode/1
:0: Unknown function 'Elixir.MerklePatriciaTree.DB.ExternalDB':init/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Proof':construct_proof/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Proof':verify_proof/4
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':delete/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':get/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':new/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':new/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':update/3
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie.Inspector':all_keys/1
:0: Unknown function 'Elixir.Msgpax':'pack!'/1
:0: Unknown function 'Elixir.Msgpax':'pack!'/2
:0: Unknown function 'Elixir.Msgpax':unpack/1
:0: Unknown function 'Elixir.Serialization':rlp_encode/2
:0: Unknown function base58:base58_to_binary/1
:0: Unknown function base58:binary_to_base58/1
:0: Unknown function enacl:generichash/2
:0: Unknown function sha3:hash/2
:0: Unknown type 'Elixir.Account':t/0
:0: Unknown type 'Elixir.AccountsStateTree':accounts_state/0
:0: Unknown type 'Elixir.Aecore.Account.Account':pubkey/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':account/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':accounts/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':chainstate/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':naming/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':account_chainstate/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':accounts/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':chainstate/0
:0: Unknown type 'Elixir.Aecore.Oracle.Oracle':oracles/0
:0: Unknown type 'Elixir.Aecore.Tx.DataTx':paload/0
:0: Unknown type 'Elixir.Block':t/0
:0: Unknown type 'Elixir.ChainState':account/0
:0: Unknown type 'Elixir.ChainState':account_chainstate/0
:0: Unknown type 'Elixir.ChainState':accounts/0
:0: Unknown type 'Elixir.ChainState':chainstate/0
:0: Unknown type 'Elixir.Chainstate':chain_state_types/0
:0: Unknown type 'Elixir.ChannelCreateTx':t/0
:0: Unknown type 'Elixir.ChannelPeerState':t/0
:0: Unknown type 'Elixir.List':t/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':key/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':t/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':value/0
Function put/3 has no local return
Function update/3 has no local return
Function process_chainstate/5 has no local return
The created fun has no local return
Function deduct_fee/5 has no local return
Function check_peer/2 has no local return
Function standard_deduct_fee/4 has no local return
Function get_info/1 has no local return
Function get_block/1 has no local return
Function get_raw_blocks/1 has no local return
Function get_pool_txs/1 has no local return
Function send_block/2 has no local return
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::any(),'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
Function send_tx/2 has no local return
The call 'Elixir.Aehttpclient.Client':post_to_peers(#{#<116>(8, 1, 'integer', ['unsigned', 'big']), #<120>(8, 1, 'integer', ['unsigned', 'big'])}#,Vdata@1::#{<<_:32,_:_*8>>=>binary() | [any()] | map()},Vpeers@1::any()) breaks the contract ('Elixir.String':t(),'Elixir.Aecore.Tx.SignedTx':t(),['Elixir.String':t()]) -> 'ok'
Invalid type specification for function 'Elixir.Aehttpclient.Client':post_to_peers/3. The success typing is (<<_:16>>,#{<<_:32,_:_*8>>=>binary() | [any()] | map()},_) -> 'ok'
Function get_peers/1 has no local return
Function get_and_add_peers/1 has no local return
Function get_account_balance/1 has no local return
Function get_account_txs/1 has no local return
Function get/1 has no local return
Function get/2 has no local return
Function handle_info/2 has no local return
Function trim_peers/1 will never be called
Function 'should_a_peer_be_added?'/1 will never be called
Function broadcast_new_block_added_to_chain_and_new_mined_tx/1 has no local return
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::atom() | #{'txs':=_, _=>_},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
Function block_by_hash/2 has no local return
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'type':=atom()}, 'signatures':=[binary()]}]},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
The pattern {'error', 'block_not_found'} can never match the type {'error',binary()}
The pattern {'error', 'invalid_hash'} can never match the type {'error',binary()}
The created fun has no local return
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::atom() | #{'header':=_, _=>_},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
The created fun has no local return
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::any(),'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
The pattern {_, Vstate@1} can never match the type 'idle' | 'running'
Function oracle_response/2 has no local return
Function oracle_query/2 has no local return
The call maps:put('proof',Vproof@1::[any()],[map()]) will never return since it differs in the 3rd argument from the success typing arguments: (any(),any(),map())
Overloaded contract for 'Elixir.Aeutil.PatriciaMerkleTree':new/1 has overlapping domains; such contracts are currently unsupported and are simply ignored
The call maps:put(#{#<116>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,Vserialized_txs@1::[any()],Vserialized_header@1::binary()) will never return since it differs in the 3rd argument from the success typing arguments: (any(),any(),map())
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie.Inspector':all_keys/1
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The return type #{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}} in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The inferred return type of init/1 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_}) has nothing in common with #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The inferred type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=_, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The inferred type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=atom() | #{'ttl':=_, _=>_}, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 3rd argument of deduct_fee/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
:0: Unknown function 'Elixir.Aewallet.Cypher':decrypt/2
:0: Unknown function 'Elixir.Aewallet.Cypher':encrypt/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie.Inspector':all_values/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie.Inspector':inspect_trie/1
:0: Unknown function enacl:crypto_sign_ed25519_public_to_curve25519/1
:0: Unknown function enacl:crypto_sign_ed25519_secret_to_curve25519/1
:0: Unknown function enacl:curve25519_scalarmult_base/1
:0: Unknown function enacl:sign_keypair/0
:0: Unknown function enoise:accept/2
:0: Unknown function enoise:close/1
:0: Unknown function enoise:connect/2
:0: Unknown function enoise:send/2
:0: Unknown function enoise_hs_state:remote_keys/1
:0: Unknown function enoise_keypair:new/2
:0: Unknown function enoise_keypair:new/3
:0: Unknown function enoise_keypair:pubkey/1
:0: Unknown type 'Elixir.Chainstate':accounts/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':trie/0
:0: Unknown type 'Elixir.SignedTx':t/0
:0: Unknown type 'Elixir.SpendTx':t/0
:0: Unknown type 'Elixir.Trie':t/0
The call 'Elixir.Aeutil.Hash':hash(Vtransaction_data_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()    
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                      
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                     
The pattern {'ok', Vheader@1} can never match the type {'error','header_not_found'}                                           
The call 'Elixir.Aeutil.Serialization':remove_struct(Vchain_states@1::'not_found' | {'error',_} | {'ok',map()}) breaks the contract ([any()]) -> [any()]                                                           
    ; (map()) -> map() in the 1st argument                                           
The call 'Elixir.Aeutil.Hash':hash(Vtx_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()                            
Function get_headers_forward/3 will never be called                                                                           
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStateOffChain':transfer/3. The success typing is (#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=_, _=>_},'initiator' | 'responder',number()) -> {'ok',#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=[<<>>,...], _=>_}}                        
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStatePeer':initialize/5. The success typing is (binary(),[any(),...],[non_neg_integer(),...],_,_) -> #{'__struct__':='Elixir.Aecore.Channel.ChannelStatePeer', 'channel_reserve':=_, 'fsm_state':='initialized', 'highest_signed_state':='nil', 'highest_state':=#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[<<>>,...]}, 'initiator_pubkey':=_, 'responder_pubkey':=_, 'role':=_}                 
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx':init/1. The success typing is (#{'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx', 'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_}                                          
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCreateTx':init/1. The success typing is (#{'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCreateTx', 'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_}                                                           
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                    
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                     
Overloaded contract for 'Elixir.Aecore.Keys.Utils':'has_dir?'/2 has overlapping domains; such contracts are currently unsupported and are simply ignored                                                               
Overloaded contract for 'Elixir.Aecore.Naming.NameUtil':validate_label_length/1 has overlapping domains; such contracts are currently unsupported and are simply ignored                                        
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                       
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                   
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                    
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type #{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}} in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                             
The inferred return type of init/1 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_}) has nothing in common with #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                            
The inferred type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=_, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                     
The specified type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                 
The inferred type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=atom() | #{'ttl':=_, _=>_}, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                              
The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 3rd argument of deduct_fee/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                         
The pattern {'ok', #{'txs':=Vtxs@1}} can never match the type {'ok',[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]}       
The pattern {'ok', Vheaders@1} can never match the type {'error','header_not_found'}                                 
The call 'Elixir.Exexec':send(Vospid@1::non_neg_integer(),'eof') breaks the contract (pid() | os_pid(),binary()) -> 'ok'         
Guard test '/='(Verror@1::'nil','nil') can never succeed                                                                        
The pattern 'true' can never match the type 'false'                                                                             
The pattern {'ok', Vvsn@1} can never match the type {'error',<<_:64,_:_*8>>}                                                    
The pattern #{'txs':=_@2} can never match the type {'error',atom() | binary()} | {'ok',#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'miner':=binary(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]}}                                                             
Function hash_tx/1 has no local return
The call 'Elixir.Aeutil.Hash':hash({'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()                                       
Invalid type specification for function 'Elixir.Aecore.Tx.SignedTx':rlp_decode/1. The success typing is (_) -> {'error',<<_:64,_:_*8>>} | #{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':={'error',<<_:64,_:_*8>>} | {'ok',map()} | #{'__struct__':='Elixir.Aecore.Chain.Block' | 'Elixir.Aecore.Tx.SignedTx', 'data'=>{_,_} | map(), 'header'=>map(), 'signatures'=>_, 'txs'=>[any()]}, 'signatures':=_}                                                                    
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_peers/1. The success typing is (binary()) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}                                                             
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_balance/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}                                               
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_txs/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}                                                   
The pattern 'none' can never match the type #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'nonce':=non_neg_integer(), 'pubkey':=binary()}        
The pattern {'ok', Vblock@1} can never match the type {'error',binary()}                       
The pattern {'error', 'chain_too_short'} can never match the type {'error',binary()}           
The call 'Elixir.Aeutil.Serialization':block(Vblock@1::#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'miner':=binary(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
The pattern {'ok', Vheader@1} can never match the type {'error','header_not_found' | 'invalid_hash'}
The pattern {'ok', Vheader@1} can never match the type {'error','chain_too_short'}
The call 'Elixir.Aeutil.Serialization':serialize_txs_info_to_json(Vuser_txs@1::[any(),...]) will never return since it differs in the 1st argument from the success typing arguments: ([])
The pattern {'ok', Vtag@1} can never match the type {'error',<<_:64,_:_*8>>}
The call 'Elixir.Aecore.Tx.DataTx':rlp_decode(Vpayload@1::atom() | {'error',<<_:64,_:_*8>>},Vdatatx@1::any()) breaks the contract (non_neg_integer(),[any()]) -> tx_types() | {'error','Elixir.String':t()}
The call 'Elixir.Aeutil.Hash':hash(Vtransaction_data_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()    
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                      
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                     
The pattern {'ok', Vheader@1} can never match the type {'error','header_not_found'}                                           
The call 'Elixir.Aeutil.Serialization':remove_struct(Vchain_states@1::'not_found' | {'error',_} | {'ok',map()}) breaks the contract ([any()]) -> [any()]                                                           
    ; (map()) -> map() in the 1st argument                                           
The call 'Elixir.Aeutil.Hash':hash(Vtx_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()                            
Function get_headers_forward/3 will never be called                                                                           
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStateOffChain':transfer/3. The success typing is (#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=_, _=>_},'initiator' | 'responder',number()) -> {'ok',#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=[<<>>,...], _=>_}}                        
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStatePeer':initialize/5. The success typing is (binary(),[any(),...],[non_neg_integer(),...],_,_) -> #{'__struct__':='Elixir.Aecore.Channel.ChannelStatePeer', 'channel_reserve':=_, 'fsm_state':='initialized', 'highest_signed_state':='nil', 'highest_state':=#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[<<>>,...]}, 'initiator_pubkey':=_, 'responder_pubkey':=_, 'role':=_}                 
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx':init/1. The success typing is (#{'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx', 'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_}                                          
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCreateTx':init/1. The success typing is (#{'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCreateTx', 'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_}                                                           
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                    
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                     
Overloaded contract for 'Elixir.Aecore.Keys.Utils':'has_dir?'/2 has overlapping domains; such contracts are currently unsupported and are simply ignored                                                               
Overloaded contract for 'Elixir.Aecore.Naming.NameUtil':validate_label_length/1 has overlapping domains; such contracts are currently unsupported and are simply ignored                                        
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                       
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                   
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                    
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type #{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}} in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                             
The inferred return type of init/1 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_}) has nothing in common with #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                            
The inferred type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=_, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                     
The specified type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                 
The inferred type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=atom() | #{'ttl':=_, _=>_}, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                              
The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 3rd argument of deduct_fee/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                         
The pattern {'ok', #{'txs':=Vtxs@1}} can never match the type {'ok',[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]}       
The pattern {'ok', Vheaders@1} can never match the type {'error','header_not_found'}                                 
The call 'Elixir.Exexec':send(Vospid@1::non_neg_integer(),'eof') breaks the contract (pid() | os_pid(),binary()) -> 'ok'         
Guard test '/='(Verror@1::'nil','nil') can never succeed                                                                        
The pattern 'true' can never match the type 'false'                                                                             
The pattern {'ok', Vvsn@1} can never match the type {'error',<<_:64,_:_*8>>}                                                    
The pattern #{'txs':=_@2} can never match the type {'error',atom() | binary()} | {'ok',#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'miner':=binary(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]}}
The call 'Elixir.Aeutil.Hash':hash({'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()
Invalid type specification for function 'Elixir.Aecore.Tx.SignedTx':rlp_decode/1. The success typing is (_) -> {'error',<<_:64,_:_*8>>} | #{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':={'error',<<_:64,_:_*8>>} | {'ok',map()} | #{'__struct__':='Elixir.Aecore.Chain.Block' | 'Elixir.Aecore.Tx.SignedTx', 'data'=>{_,_} | map(), 'header'=>map(), 'signatures'=>_, 'txs'=>[any()]}, 'signatures':=_}
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_peers/1. The success typing is (binary()) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_balance/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_txs/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
The pattern 'none' can never match the type #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'nonce':=non_neg_integer(), 'pubkey':=binary()}
The pattern {'ok', Vblock@1} can never match the type {'error',binary()}
The pattern {'error', 'chain_too_short'} can never match the type {'error',binary()}
The call 'Elixir.Aeutil.Hash':hash(Vtransaction_data_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()    
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                      
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                     
The pattern {'ok', Vheader@1} can never match the type {'error','header_not_found'}                                           
The call 'Elixir.Aeutil.Serialization':remove_struct(Vchain_states@1::'not_found' | {'error',_} | {'ok',map()}) breaks the contract ([any()]) -> [any()]                                                           
    ; (map()) -> map() in the 1st argument                                           
The call 'Elixir.Aeutil.Hash':hash(Vtx_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()                            
Function get_headers_forward/3 will never be called                                                                           
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStateOffChain':transfer/3. The success typing is (#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=_, _=>_},'initiator' | 'responder',number()) -> {'ok',#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=[<<>>,...], _=>_}}                        
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStatePeer':initialize/5. The success typing is (binary(),[any(),...],[non_neg_integer(),...],_,_) -> #{'__struct__':='Elixir.Aecore.Channel.ChannelStatePeer', 'channel_reserve':=_, 'fsm_state':='initialized', 'highest_signed_state':='nil', 'highest_state':=#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[<<>>,...]}, 'initiator_pubkey':=_, 'responder_pubkey':=_, 'role':=_}                 
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx':init/1. The success typing is (#{'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx', 'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_}                                          
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCreateTx':init/1. The success typing is (#{'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCreateTx', 'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_}                                                           
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                    
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                     
Overloaded contract for 'Elixir.Aecore.Keys.Utils':'has_dir?'/2 has overlapping domains; such contracts are currently unsupported and are simply ignored                                                               
Overloaded contract for 'Elixir.Aecore.Naming.NameUtil':validate_label_length/1 has overlapping domains; such contracts are currently unsupported and are simply ignored                                        
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                       
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                   
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                    
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type #{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}} in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                             
The inferred return type of init/1 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_}) has nothing in common with #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                            
The inferred type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=_, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                     
The specified type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                 
The inferred type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=atom() | #{'ttl':=_, _=>_}, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                              
The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 3rd argument of deduct_fee/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                         
The pattern {'ok', #{'txs':=Vtxs@1}} can never match the type {'ok',[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, 'senders':=[binary()], 'ttl':=non_neg_integer(), 'type':=atom()}, 'signatures':=[binary()]}]}
The pattern {'ok', Vheaders@1} can never match the type {'error','header_not_found'}
The call 'Elixir.Exexec':send(Vospid@1::non_neg_integer(),'eof') breaks the contract (pid() | os_pid(),binary()) -> 'ok'
Guard test '/='(Verror@1::'nil','nil') can never succeed
The pattern 'true' can never match the type 'false'
The pattern {'ok', Vvsn@1} can never match the type {'error',<<_:64,_:_*8>>}
The call 'Elixir.Aeutil.Hash':hash(Vtransaction_data_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()    
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                      
The pattern {'ok', Vupdated_chainstate@1} can never match the type {'error',binary()}                                     
The pattern {'ok', Vheader@1} can never match the type {'error','header_not_found'}                                           
The call 'Elixir.Aeutil.Serialization':remove_struct(Vchain_states@1::'not_found' | {'error',_} | {'ok',map()}) breaks the contract ([any()]) -> [any()]                                                           
    ; (map()) -> map() in the 1st argument                                           
The call 'Elixir.Aeutil.Hash':hash(Vtx_bin@1::{'error',<<_:64,_:_*8>>}) will never return since the success typing is (binary()) -> binary() and the contract is (binary()) -> binary()                            
Function get_headers_forward/3 will never be called                                                                           
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStateOffChain':transfer/3. The success typing is (#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=_, _=>_},'initiator' | 'responder',number()) -> {'ok',#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'initiator_amount':=number(), 'responder_amount':=number(), 'sequence':=number(), 'signatures':=[<<>>,...], _=>_}}                        
Invalid type specification for function 'Elixir.Aecore.Channel.ChannelStatePeer':initialize/5. The success typing is (binary(),[any(),...],[non_neg_integer(),...],_,_) -> #{'__struct__':='Elixir.Aecore.Channel.ChannelStatePeer', 'channel_reserve':=_, 'fsm_state':='initialized', 'highest_signed_state':='nil', 'highest_state':=#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[<<>>,...]}, 'initiator_pubkey':=_, 'responder_pubkey':=_, 'role':=_}                 
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx':init/1. The success typing is (#{'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCloseMutalTx', 'channel_id':=_, 'initiator_amount':=_, 'responder_amount':=_}                                          
Invalid type specification for function 'Elixir.Aecore.Channel.Tx.ChannelCreateTx':init/1. The success typing is (#{'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_, _=>_}) -> #{'__struct__':='Elixir.Aecore.Channel.Tx.ChannelCreateTx', 'initiator_amount':=_, 'locktime':=_, 'responder_amount':=_}                                                           
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                    
The return type any() in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                                     
Overloaded contract for 'Elixir.Aecore.Keys.Utils':'has_dir?'/2 has overlapping domains; such contracts are currently unsupported and are simply ignored                                                               
Overloaded contract for 'Elixir.Aecore.Naming.NameUtil':validate_label_length/1 has overlapping domains; such contracts are currently unsupported and are simply ignored                                        
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                       
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                   
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                    
The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{_,map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                      
The return type #{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}} in the specification of init/1 is not a subtype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                             
The inferred return type of init/1 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_}) has nothing in common with #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                   
The specified type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                            
The inferred type for the 1st argument of validate/2 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=_, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                                                     
The specified type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour                 
The inferred type for the 4th argument of process_chainstate/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=_, 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=atom() | #{'ttl':=_, _=>_}, _=>_}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
The specified type for the 3rd argument of deduct_fee/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':=atom(), 'amount'=>non_neg_integer(), 'channel_id'=>binary(), 'client_ttl'=>non_neg_integer(), 'commitment'=>binary(), 'expire_by'=>non_neg_integer(), 'hash'=>binary(), 'initiator_amount'=>non_neg_integer(), 'locktime'=>non_neg_integer(), 'name'=>binary(), 'name_salt'=>binary(), 'payload'=>binary(), 'pointers'=>binary(), 'query_fee'=>non_neg_integer(), 'query_format'=>map(), 'query_id'=>binary(), 'receiver'=>binary(), 'responder_amount'=>non_neg_integer(), 'response'=>map(), 'response_format'=>map(), 'state'=>#{'__struct__':='Elixir.Aecore.Channel.ChannelStateOffChain', 'channel_id':=binary(), 'initiator_amount':=non_neg_integer(), 'responder_amount':=non_neg_integer(), 'sequence':=non_neg_integer(), 'signatures':=[binary()]}, 'target'=>binary(), 'ttl'=>non_neg_integer() | #{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'version'=>non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
