:0: Unknown function 'Elixir.Aewallet.Cypher':decrypt/2
:0: Unknown function 'Elixir.Aewallet.Cypher':encrypt/2
:0: Unknown function 'Elixir.Aewallet.KeyPair':compress/1
:0: Unknown function 'Elixir.Aewallet.KeyPair':derive/2
:0: Unknown function 'Elixir.Aewallet.KeyPair':generate_master_key/1
:0: Unknown function 'Elixir.Aewallet.KeyPair':generate_pub_key/1
:0: Unknown function 'Elixir.Aewallet.Signing':sign/2
:0: Unknown function 'Elixir.Aewallet.Signing':verify/3
:0: Unknown function 'Elixir.Aewallet.Wallet':create_wallet/2
:0: Unknown function 'Elixir.Aewallet.Wallet':get_private_key/3
:0: Unknown function 'Elixir.Aewallet.Wallet':get_public_key/3
:0: Unknown function 'Elixir.Aewallet.Wallet':get_seed/2
:0: Unknown function 'Elixir.ExJsonSchema.Schema':resolve/1
:0: Unknown function 'Elixir.ExJsonSchema.Validator':validate/2
:0: Unknown function 'Elixir.MerklePatriciaTree.DB.ExternalDB':init/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Proof':construct_proof/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Proof':verify_proof/4
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':delete/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':get/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':new/1
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':new/2
:0: Unknown function 'Elixir.MerklePatriciaTree.Trie':update/3
:0: Unknown function 'Elixir.Msgpax':'pack!'/1
:0: Unknown function 'Elixir.Msgpax':'pack!'/2
:0: Unknown function 'Elixir.Msgpax':unpack/1
:0: Unknown function 'Elixir.Pool':add_transactions/1
:0: Unknown function 'Elixir.Sync':new/1
:0: Unknown function base58:base58_to_binary/1
:0: Unknown function base58:binary_to_base58/1
:0: Unknown function enacl:crypto_sign_ed25519_public_to_curve25519/1
:0: Unknown function enacl:crypto_sign_ed25519_secret_to_curve25519/1
:0: Unknown function enacl:curve25519_scalarmult_base/1
:0: Unknown function enacl:generichash/2
:0: Unknown function enacl:sign_keypair/0
:0: Unknown function enoise:accept/2
:0: Unknown function enoise:connect/2
:0: Unknown function enoise:send/2
:0: Unknown function enoise_hs_state:remote_keys/1
:0: Unknown function enoise_keypair:new/2
:0: Unknown function enoise_keypair:new/3
:0: Unknown function enoise_keypair:pubkey/1
:0: Unknown function sha3:hash/2
:0: Unknown type 'Elixir.Account':t/0
:0: Unknown type 'Elixir.AccountsStateTree':accounts_state/0
:0: Unknown type 'Elixir.Aecore.Account.Account':pubkey/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':account/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':accounts/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':chainstate/0
:0: Unknown type 'Elixir.Aecore.Chain.ChainState':naming/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':account_chainstate/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':accounts/0
:0: Unknown type 'Elixir.Aecore.Chain.Chainstate':chainstate/0
:0: Unknown type 'Elixir.Aecore.Oracle.Oracle':oracles/0
:0: Unknown type 'Elixir.Aecore.Structures.OracleExtendTx':t/0
:0: Unknown type 'Elixir.Aecore.Structures.OracleQueryTx':t/0
:0: Unknown type 'Elixir.Aecore.Structures.OracleRegistrationTx':t/0
:0: Unknown type 'Elixir.Aecore.Structures.OracleResponseTx':t/0
:0: Unknown type 'Elixir.Aecore.Tx.DataTx':paload/0
:0: Unknown type 'Elixir.Block':t/0
:0: Unknown type 'Elixir.ChainState':account/0
:0: Unknown type 'Elixir.ChainState':account_chainstate/0
:0: Unknown type 'Elixir.ChainState':accounts/0
:0: Unknown type 'Elixir.ChainState':chainstate/0
:0: Unknown type 'Elixir.Chainstate':chain_state_types/0
:0: Unknown type 'Elixir.List':t/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':key/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':t/0
:0: Unknown type 'Elixir.MerklePatriciaTree.Trie':value/0
:0: Unknown type 'Elixir.NameCaimTx':t/0
:0: Unknown type 'Elixir.NameClaimTx':t/0
:0: Unknown type 'Elixir.NameTransferTx':t/0
:0: Unknown type 'Elixir.OracleExtendTx':t/0
:0: Unknown type 'Elixir.Signature':t/0
:0: Unknown type 'Elixir.SignedTx':t/0
apps/aecore/lib/aecore/account/account.ex:95: Function create_coinbase_tx/2 has no local return
apps/aecore/lib/aecore/account/account.ex:97: The call 'Elixir.Aecore.Tx.DataTx':init('Elixir.Aecore.Account.Tx.CoinbaseTx',Vpayload@1::#{'__struct__':='Elixir.Aecore.Account.Tx.CoinbaseTx', 'amount':=_, 'receiver':=_},[],0,0) breaks the contract (tx_types(),payload(),[binary()] | binary(),non_neg_integer(),integer()) -> 'Elixir.Aecore.Tx.DataTx':t()
apps/aecore/lib/aecore/account/account_state_tree.ex:34: The pattern {'ok', Vacc@1} can never match the type 'none' | binary() | #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}
apps/aecore/lib/aecore/account/tx/coinbase_tx.ex:58: Invalid type specification for function 'Elixir.Aecore.Account.Tx.CoinbaseTx':create/2. The success typing is (_,_) -> #{'__struct__':='Elixir.Aecore.Account.Tx.CoinbaseTx', 'amount':=_, 'receiver':=_}
apps/aecore/lib/aecore/account/tx/coinbase_tx.ex:116: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Account.Tx.CoinbaseTx', 'amount':=non_neg_integer(), 'receiver':=binary()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/account/tx/coinbase_tx.ex:127: The return type gb_merkle_trees:tree() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/account/tx/spend_tx.ex:128: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/account/tx/spend_tx.ex:135: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/chain/chainstate.ex:64: Invalid type specification for function 'Elixir.Aecore.Chain.Chainstate':apply_transaction_on_state/3. The success typing is (_,_,#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]}) -> {'error',binary()} | {'ok',_}
apps/aecore/lib/aecore/chain/worker.ex:452: Function handle_info/2 has no local return
apps/aecore/lib/aecore/chain/worker.ex:461: The call 'Elixir.Aeutil.Serialization':remove_struct(Vchain_states@1::{'error',_} | {'ok',map()}) breaks the contract ([any()]) -> [any()]
    ; (map()) -> map() in the 1st argument
apps/aecore/lib/aecore/chain/worker.ex:483: The created fun has no local return
apps/aecore/lib/aecore/keys/utils.ex:6: Overloaded contract for 'Elixir.Aecore.Keys.Utils':'has_dir?'/2 has overlapping domains; such contracts are currently unsupported and are simply ignored
apps/aecore/lib/aecore/miner/worker.ex:70: Function mine_sync_block_to_chain/0 has no local return
apps/aecore/lib/aecore/miner/worker.ex:217: Function candidate/0 has no local return
apps/aecore/lib/aecore/miner/worker.ex:278: The call 'Elixir.Aecore.Oracle.Oracle':'tx_ttl_is_valid?'(Vtx@1::#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Oracle.Tx.OracleExtendTx' | 'Elixir.Aecore.Oracle.Tx.OracleQueryTx' | 'Elixir.Aecore.Oracle.Tx.OracleRegistrationTx' | 'Elixir.Aecore.Oracle.Tx.OracleResponseTx', _=>_}, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]},Vblock_height@1::pos_integer()) breaks the contract (oracle_txs_with_ttl(),non_neg_integer()) -> boolean()
apps/aecore/lib/aecore/miner/worker.ex:282: Function create_block/5 will never be called
apps/aecore/lib/aecore/naming/name_util.ex:86: Overloaded contract for 'Elixir.Aecore.Naming.NameUtil':validate_label_length/1 has overlapping domains; such contracts are currently unsupported and are simply ignored
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:80: The return type {gb_merkle_trees:tree(),_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:80: The specification for 'Elixir.Aecore.Naming.Tx.NameClaimTx':process_chainstate/5 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (_,map(),non_neg_integer(),#{'__struct__':='Elixir.Aecore.Naming.Tx.NameClaimTx', 'name':=binary(), 'name_salt':=binary(), _=>_},#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}) -> {'ok',{_,map()}}
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:112: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Naming.Tx.NameClaimTx', 'name':=binary(), 'name_salt':=binary()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:119: The inferred type for the 4th argument of preprocess_check/5 (atom() | #{'name':=binary(), 'name_salt':=binary(), _=>_}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:157: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_claim_tx.ex:164: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_pre_claim_tx.ex:75: The return type {gb_merkle_trees:tree(),_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_pre_claim_tx.ex:75: The specification for 'Elixir.Aecore.Naming.Tx.NamePreClaimTx':process_chainstate/5 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (_,map(),non_neg_integer(),#{'__struct__':='Elixir.Aecore.Naming.Tx.NamePreClaimTx', 'commitment':=binary(), _=>_},#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}) -> {'ok',{_,map()}}
apps/aecore/lib/aecore/naming/tx/name_pre_claim_tx.ex:129: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_pre_claim_tx.ex:136: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:72: The return type {gb_merkle_trees:tree(),_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:72: The specification for 'Elixir.Aecore.Naming.Tx.NameRevokeTx':process_chainstate/5 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (_,map(),number(),#{'__struct__':='Elixir.Aecore.Naming.Tx.NameRevokeTx', 'hash':=_, _=>_},_) -> {'ok',{_,map()}}
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:103: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Naming.Tx.NameRevokeTx', 'hash':=binary()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:110: The inferred type for the 4th argument of preprocess_check/5 (atom() | #{'hash':=_, _=>_}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:141: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_revoke_tx.ex:148: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:79: The return type {gb_merkle_trees:tree(),_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:79: The specification for 'Elixir.Aecore.Naming.Tx.NameTransferTx':process_chainstate/5 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (_,map(),_,#{'__struct__':='Elixir.Aecore.Naming.Tx.NameTransferTx', 'hash':=_, 'target':=_, _=>_},_) -> {'ok',{_,map()}}
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:104: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Naming.Tx.NameTransferTx', 'hash':=binary(), 'target':=binary()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:111: The inferred type for the 4th argument of preprocess_check/5 (atom() | #{'hash':=_, _=>_}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:142: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_transfer_tx.ex:149: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:97: The return type {gb_merkle_trees:tree(),_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:97: The specification for 'Elixir.Aecore.Naming.Tx.NameUpdateTx':process_chainstate/5 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (_,map(),_,#{'__struct__':='Elixir.Aecore.Naming.Tx.NameUpdateTx', 'client_ttl':=_, 'expire_by':=_, 'hash':=_, 'pointers':=_, _=>_},_) -> {'ok',{_,map()}}
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:129: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Naming.Tx.NameUpdateTx', 'client_ttl':=non_neg_integer(), 'expire_by':=non_neg_integer(), 'hash':=binary(), 'pointers':=binary()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:136: The inferred type for the 4th argument of preprocess_check/5 (atom() | #{'hash':=_, _=>_}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:173: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/naming/tx/name_update_tx.ex:180: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/oracle.ex:55: Function register/5 has no local return
apps/aecore/lib/aecore/oracle/oracle.ex:64: The call 'Elixir.Aecore.Tx.DataTx':init('Elixir.Aecore.Oracle.Tx.OracleRegistrationTx',Vpayload@1::#{'query_fee':=_, 'query_format':=_, 'response_format':=_, 'ttl':=_},binary(),Vfee@1::any(),non_neg_integer()) breaks the contract (tx_types(),payload(),[binary()] | binary(),non_neg_integer(),integer()) -> 'Elixir.Aecore.Tx.DataTx':t()
apps/aecore/lib/aecore/oracle/oracle.ex:82: Function query/6 has no local return
apps/aecore/lib/aecore/oracle/oracle.ex:92: The call 'Elixir.Aecore.Tx.DataTx':init('Elixir.Aecore.Oracle.Tx.OracleQueryTx',Vpayload@1::#{'oracle_address':=_, 'query_data':=_, 'query_fee':=_, 'query_ttl':=_, 'response_ttl':=_},binary(),Vfee@1::any(),non_neg_integer()) breaks the contract (tx_types(),payload(),[binary()] | binary(),non_neg_integer(),integer()) -> 'Elixir.Aecore.Tx.DataTx':t()
apps/aecore/lib/aecore/oracle/oracle.ex:109: Function respond/3 has no local return
apps/aecore/lib/aecore/oracle/oracle.ex:116: The call 'Elixir.Aecore.Tx.DataTx':init('Elixir.Aecore.Oracle.Tx.OracleResponseTx',Vpayload@1::#{'query_id':=_, 'response':=_},binary(),Vfee@1::any(),non_neg_integer()) breaks the contract (tx_types(),payload(),[binary()] | binary(),non_neg_integer(),integer()) -> 'Elixir.Aecore.Tx.DataTx':t()
apps/aecore/lib/aecore/oracle/oracle.ex:129: Function extend/2 has no local return
apps/aecore/lib/aecore/oracle/oracle.ex:135: The call 'Elixir.Aecore.Tx.DataTx':init('Elixir.Aecore.Oracle.Tx.OracleExtendTx',Vpayload@1::#{'ttl':=_},binary(),Vfee@1::any(),non_neg_integer()) breaks the contract (tx_types(),payload(),[binary()] | binary(),non_neg_integer(),integer()) -> 'Elixir.Aecore.Tx.DataTx':t()
apps/aecore/lib/aecore/oracle/tx/oracle_extend_tx.ex:53: The return type {_,_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_extend_tx.ex:79: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleExtendTx', 'ttl':=non_neg_integer()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_extend_tx.ex:111: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_extend_tx.ex:118: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_query_tx.ex:101: The return type {_,_} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_query_tx.ex:147: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleQueryTx', 'oracle_address':=binary(), 'query_data':=_, 'query_fee':=non_neg_integer(), 'query_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}, 'response_ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_query_tx.ex:154: The inferred type for the 4th argument of preprocess_check/5 (atom() | #{'query_fee':=number(), _=>_}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_query_tx.ex:193: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_query_tx.ex:200: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_registration_tx.ex:97: The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_registration_tx.ex:130: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleRegistrationTx', 'query_fee':=non_neg_integer(), 'query_format':=map(), 'response_format':=map(), 'ttl':=#{'ttl':=non_neg_integer(), 'type':='absolute' | 'relative'}}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_registration_tx.ex:165: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_registration_tx.ex:172: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_response_tx.ex:65: The return type {'ok',{_,_}} in the specification of process_chainstate/5 is not a subtype of {'error',binary()} | {'ok',{gb_merkle_trees:tree(),map()}}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_response_tx.ex:106: The specified type for the 4th argument of preprocess_check/5 (#{'__struct__':='Elixir.Aecore.Oracle.Tx.OracleResponseTx', 'query_id':=binary(), 'response':=map()}) is not a supertype of #{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx', 'amount':=non_neg_integer(), 'receiver':=binary(), 'version':=non_neg_integer()}, which is expected type for this argument in the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_response_tx.ex:153: The return type any() in the specification of deduct_fee/5 is not a subtype of #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/oracle/tx/oracle_response_tx.ex:160: The inferred return type of deduct_fee/5 (gb_merkle_trees:tree()) has nothing in common with #{'__struct__':='Elixir.Aecore.Account.Account', 'balance':=non_neg_integer(), 'last_updated':=non_neg_integer(), 'nonce':=non_neg_integer()}, which is the expected return type for the callback of the 'Elixir.Aecore.Tx.Transaction' behaviour
apps/aecore/lib/aecore/peers/peer_connection.ex:330: Call to missing or unexported function 'Elixir.Aecore.Chain.Worker':get_headers_forward/2
apps/aecore/lib/aecore/peers/sync.ex:377: Invalid type specification for function 'Elixir.Aecore.Peers.Sync':do_start_sync/2. The success typing is (pid(),binary()) -> 'ok' | {'error',_}
apps/aecore/lib/aecore/peers/sync.ex:378: Function do_start_sync/2 will never be called
apps/aecore/lib/aecore/peers/sync.ex:416: Function agree_on_height/5 will never be called
apps/aecore/lib/aecore/peers/sync.ex:446: Function fetch_more/4 will never be called
apps/aecore/lib/aecore/peers/sync.ex:496: The pattern 'false' can never match the type {'false',non_neg_integer()} | {'true',non_neg_integer()}
apps/aecore/lib/aecore/peers/sync.ex:504: Call to missing or unexported function 'Elixir.Aecore.Peers.PeerConnection':ping_peer/1
apps/aecore/lib/aecore/peers/sync.ex:522: Function do_forward_block/2 has no local return
apps/aecore/lib/aecore/peers/sync.ex:526: The pattern {'true', #{'to':=Vto_height@1}} can never match the type {'false',non_neg_integer()} | {'true',non_neg_integer()}
apps/aecore/lib/aecore/peers/sync.ex:531: The pattern 'false' can never match the type {'false',non_neg_integer()} | {'true',non_neg_integer()}
apps/aecore/lib/aecore/peers/sync.ex:581: Function fill_pool/2 will never be called
apps/aecore/lib/aecore/peers/sync.ex:589: The created fun has no local return
apps/aecore/lib/aecore/peers/sync.ex:604: Function do_fetch_block/2 will never be called
apps/aecore/lib/aecore/peers/sync.ex:616: Function do_fetch_block_ext/2 will never be called
apps/aecore/lib/aecore/peers/sync.ex:646: The variable Verr@1 can never match since previous clauses completely covered the type {'ok',#{binary()=>#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]}}}
apps/aecore/lib/aecore/peers/worker/supervisor.ex:14: Function start_link/1 has no local return
apps/aecore/lib/aecore/peers/worker/supervisor.ex:15: The call 'Elixir.Supervisor':start_link('Elixir.Aecore.Peers.Worker.Supervisor','ok') breaks the contract ([supervisor:child_spec() | {module(),term()} | module()],options()) -> on_start()
apps/aecore/lib/aecore/pow/cuckoo.ex:98: The call 'Elixir.Exexec':send(Vospid@1::non_neg_integer(),'eof') breaks the contract (pid() | os_pid(),binary()) -> 'ok'
apps/aecore/lib/aecore/pow/cuckoo.ex:162: Guard test '/='(Verror@1::'nil','nil') can never succeed
apps/aecore/lib/aecore/tx/data_tx.ex:216: Invalid type specification for function 'Elixir.Aecore.Tx.DataTx':serialize/1. The success typing is (#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=atom() | binary() | [any()] | map(), 'nonce':=atom() | binary() | [any()] | map(), 'payload':=atom() | binary() | [any()] | map(), 'senders':=[any()], 'type':=atom() | binary() | [any()] | map(), _=>_}) -> #{<<_:24,_:_*8>>=>binary() | [any()]}
apps/aecore/lib/aecore/tx/data_tx.ex:257: The specification for 'Elixir.Aecore.Tx.DataTx':standard_deduct_fee/4 has an opaque subtype gb_merkle_trees:tree() which is violated by the success typing (gb_merkle_trees:tree(),_,#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'},_) -> gb_merkle_trees:tree()
apps/aecore/lib/aecore/tx/pool/worker.ex:92: The call 'Elixir.Aehttpserver.Web.Notify':broadcast_new_transaction_in_the_pool(Vtx@1::#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=#{'__struct__':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Oracle.Tx.OracleExtendTx' | 'Elixir.Aecore.Oracle.Tx.OracleQueryTx' | 'Elixir.Aecore.Oracle.Tx.OracleRegistrationTx' | 'Elixir.Aecore.Oracle.Tx.OracleResponseTx', _=>_}, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]}) will never return since it differs in the 1st argument from the success typing arguments: (#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=atom() | binary() | [any()] | map(), 'nonce':=atom() | binary() | [any()] | map(), 'payload':=atom() | binary() | [any()] | map(), 'senders':=[any()], 'type':=atom() | binary() | [any()] | map(), _=>_}, 'signatures':=[any()], _=>_})
apps/aecore/lib/aecore/tx/pool/worker.ex:97: The created fun has no local return
apps/aecore/lib/aecore/tx/pool/worker.ex:128: The created fun has no local return
apps/aecore/lib/aecore/tx/pool/worker.ex:130: The pattern #{'txs':=_@4} can never match the type {'error',binary()} | {'ok',#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]}]}}
apps/aecore/lib/aecore/tx/signed_tx.ex:172: Invalid type specification for function 'Elixir.Aecore.Tx.SignedTx':serialize/1. The success typing is (#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=atom() | binary() | [any()] | map(), 'nonce':=atom() | binary() | [any()] | map(), 'payload':=atom() | binary() | [any()] | map(), 'senders':=[any()], 'type':=atom() | binary() | [any()] | map(), _=>_}, 'signatures':=[any()], _=>_}) -> #{<<_:32,_:_*40>>=>binary() | [any()] | map()}
apps/aecore/lib/aecore/wallet/worker.ex:197: Overloaded contract for 'Elixir.Aecore.Wallet.Worker':has_wallet/2 has overlapping domains; such contracts are currently unsupported and are simply ignored
apps/aehttpclient/lib/client.ex:53: Function send_block/2 has no local return
apps/aehttpclient/lib/client.ex:54: The call 'Elixir.Aeutil.Serialization':block(Vblock@1::any(),'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
apps/aehttpclient/lib/client.ex:59: Function send_tx/2 has no local return
apps/aehttpclient/lib/client.ex:61: The call 'Elixir.Aehttpclient.Client':post_to_peers(#{#<116>(8, 1, 'integer', ['unsigned', 'big']), #<120>(8, 1, 'integer', ['unsigned', 'big'])}#,Vdata@1::#{<<_:32,_:_*40>>=>binary() | [any()] | map()},Vpeers@1::any()) breaks the contract ('Elixir.String':t(),'Elixir.Aecore.Tx.SignedTx':t(),['Elixir.String':t()]) -> 'ok'
apps/aehttpclient/lib/client.ex:64: Invalid type specification for function 'Elixir.Aehttpclient.Client':post_to_peers/3. The success typing is (<<_:16>>,#{<<_:32,_:_*40>>=>binary() | [any()] | map()},_) -> 'ok'
apps/aehttpclient/lib/client.ex:75: Invalid type specification for function 'Elixir.Aehttpclient.Client':get_peers/1. The success typing is (binary()) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
apps/aehttpclient/lib/client.ex:86: Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_balance/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
apps/aehttpclient/lib/client.ex:91: Invalid type specification for function 'Elixir.Aehttpclient.Client':get_account_txs/1. The success typing is ({binary(),_}) -> {'error',<<_:96,_:_*32>>} | {'ok',map()}
apps/aehttpclient/lib/client.ex:146: Call to missing or unexported function 'Elixir.Aecore.Peers.Worker':get_peer_nonce/0
apps/aehttpserver/lib/aehttpserver/web/channels/notify.ex:24: Function broadcast_new_block_added_to_chain_and_new_mined_tx/1 has no local return
apps/aehttpserver/lib/aehttpserver/web/channels/notify.ex:34: The call 'Elixir.Aeutil.Serialization':block(Vblock@1::atom() | #{'txs':=_, _=>_},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:23: The pattern {'error', 'chain_too_short'} can never match the type {'error',binary()}
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:29: Function block_by_hash/2 has no local return
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:32: The call 'Elixir.Aeutil.Serialization':block(Vblock@1::#{'__struct__':='Elixir.Aecore.Chain.Block', 'header':=#{'__struct__':='Elixir.Aecore.Chain.Header', 'height':=non_neg_integer(), 'nonce':=non_neg_integer(), 'pow_evidence':=_, 'prev_hash':=binary(), 'root_hash':=binary(), 'target':=non_neg_integer(), 'time':=non_neg_integer(), 'txs_hash':=binary(), 'version':=non_neg_integer()}, 'txs':=[#{'__struct__':='Elixir.Aecore.Tx.SignedTx', 'data':=#{'__struct__':='Elixir.Aecore.Tx.DataTx', 'fee':=non_neg_integer(), 'nonce':=non_neg_integer(), 'payload':=_, 'senders':=[binary()], 'type':='Elixir.Aecore.Account.Tx.SpendTx' | 'Elixir.Aecore.Naming.Tx.NameClaimTx' | 'Elixir.Aecore.Naming.Tx.NamePreClaimTx' | 'Elixir.Aecore.Naming.Tx.NameRevokeTx' | 'Elixir.Aecore.Naming.Tx.NameTransferTx' | 'Elixir.Aecore.Naming.Tx.NameUpdateTx' | 'Elixir.Aecore.Structures.OracleExtendTx' | 'Elixir.Aecore.Structures.OracleRegistrationTx' | 'Elixir.Aecore.Structures.OracleResponseTx'}, 'signatures':=[binary()]}]},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:34: The pattern {'error', 'block_not_found'} can never match the type {'error',binary()}
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:37: The pattern {'error', 'invalid_hash'} can never match the type {'error',binary()}
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:65: The created fun has no local return
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:70: The call 'Elixir.Aeutil.Serialization':block(Vblock@1::atom() | #{'header':=_, _=>_},'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:110: The created fun has no local return
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:111: The call 'Elixir.Aeutil.Serialization':block(Vblock@1::any(),'serialize') will never return since it differs in the 2nd argument from the success typing arguments: (map(),'deserialize')
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:123: Call to missing or unexported function 'Elixir.Aecore.Peers.Sync':add_block_to_state/2
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:124: Call to missing or unexported function 'Elixir.Aecore.Peers.Sync':get_peer_blocks/0
apps/aehttpserver/lib/aehttpserver/web/controllers/block_controller.ex:124: Call to missing or unexported function 'Elixir.Aecore.Peers.Sync':add_valid_peer_blocks_to_chain/1
apps/aehttpserver/lib/aehttpserver/web/controllers/info_controller.ex:30: Call to missing or unexported function 'Elixir.Aecore.Peers.Worker':get_peer_nonce/0
apps/aehttpserver/lib/aehttpserver/web/controllers/info_controller.ex:47: Call to missing or unexported function 'Elixir.Aecore.Peers.Worker':schedule_add_peer/2
apps/aehttpserver/lib/aehttpserver/web/controllers/miner_controller.ex:15: The pattern {_, Vstate@1} can never match the type 'idle' | 'running'
apps/aehttpserver/lib/aehttpserver/web/controllers/oracle_controller.ex:12: Function oracle_response/2 has no local return
apps/aehttpserver/lib/aehttpserver/web/controllers/oracle_controller.ex:44: Function oracle_query/2 has no local return
apps/aehttpserver/lib/aehttpserver/web/controllers/tx_controller.ex:23: The call maps:put('proof',Vproof@1::[any()],[map()]) will never return since it differs in the 3rd argument from the success typing arguments: (any(),any(),map())
apps/aeutil/lib/patricia_merkle_tree.ex:27: Overloaded contract for 'Elixir.Aeutil.PatriciaMerkleTree':new/1 has overlapping domains; such contracts are currently unsupported and are simply ignored
apps/aeutil/lib/serialization.ex:40: The call maps:put(#{#<116>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,Vserialized_txs@1::[any()],Vserialized_header@1::binary()) will never return since it differs in the 3rd argument from the success typing arguments: (any(),any(),map())